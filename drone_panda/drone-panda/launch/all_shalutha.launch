<?xml version="1.0"?>
<launch>
    <arg name="virtual_robot" default="false"/>
    <arg name="virtual_drone" default="false"/>
    <arg name="use_joy" default="true"/>
    <arg name="use_space_mouse" default="false"/>
    <arg name="rvizconfig" default="lio.rviz"/> 

    <!-- <node pkg="drone_panda" type="static_publisher" name="camera_static_publisher">
        <param name="file_name" type="string" value="transforms.yaml" />
        <param name="transform" type="string" value="static_cloud_transform" />
    </node> -->

    <!-- <node pkg="drone_panda" type="static_publisher" name="panda_gripper_static_publisher">
        <param name="file_name" type="string" value="transforms.yaml" />
        <param name="transform" type="string" value="sim_robot_transform" />
    </node> -->

    <!-- <node pkg="drone_panda" type="static_publisher" name="drone_curr_mesh_static_publisher">
        <param name="file_name" type="string" value="transforms.yaml" />
        <param name="transform" type="string" value="drone_curr_mesh" />
    </node> -->

    <!-- <node pkg="drone_panda" type="static_publisher" name="drone_alt_mesh_static_publisher">
        <param name="file_name" type="string" value="transforms.yaml" />
        <param name="transform" type="string" value="drone_alt_mesh" />
    </node> -->

    <!-- <node pkg="drone_panda" type="static_publisher" name="drone_camera_static_publisher">
        <param name="file_name" type="string" value="transforms.yaml" />
        <param name="transform" type="string" value="drone_camera" />
    </node> -->

    <!-- <node pkg="drone_panda" type="static_publisher" name="rviz_camera_static_publisher">
        <param name="file_name" type="string" value="transforms.yaml" />
        <param name="transform" type="string" value="rvizcamera" />
    </node> -->

    <!-- <node pkg="drone_panda" type="static_publisher" name="ee_camera_static_publisher">
        <param name="file_name" type="string" value="transforms.yaml" />
        <param name="transform" type="string" value="ee_camera" />
    </node> -->

    <!-- <node pkg="drone_panda" type="static_publisher" name="sim_ee_static_publisher">
        <param name="file_name" type="string" value="transforms.yaml" />
        <param name="transform" type="string" value="sim_ee_transform" />
    </node> -->

    <node pkg="drone_panda" type="simulator_shalutha" name="simulator" output="screen">
        <param name="use_relaxed_ik" type="bool" value="false" />
        <param name="only_virtual" value="true" />
    </node>

    <!-- <node pkg="drone_panda" type="drone_controller" name="drone_controller" output="screen">
    </node>
    <node pkg="drone_panda" type="autonomous_mapping" name="autonomous_mapping" output="screen">
    </node> -->
        
    <!-- startup rviz -->
    <!-- <node pkg="drone_panda" type="rviz_manager" name="rviz_manager">
        <param name="rvizconfig" type="string" value="$(arg rvizconfig)" />
    </node> -->
      <node type="rviz" name="rviz" pkg="rviz" args="-d $(find drone_panda)/rviz/lio_working.rviz" />

    <!-- <node pkg="drone_panda" type="rviz_camera" name="rviz_camera" output="screen" />
    <node pkg="drone_panda" type="path_recorder" name="path_recorder" output="screen" /> -->

    <node pkg="drone_panda" type="velocity_controller" name="velocity_controller" output="screen">
    </node>
        <!-- <node pkg="drone_panda" type="alternate_view_manager" name="alternate_view_manager" output="screen">
    </node> -->
<!-- 
    <node name="compress_virtual" pkg="image_transport" type="republish" args="raw in:=/rviz1/camera1/image compressed out:=/virtual_camera/image_repub">
    </node> -->

    <!-- <node pkg="rosbag" type="record" name="rosbag_record"
       args="record /panda_ik/view_cost -o /home/senft/src/jup/bags/bag.bag"/> -->


    <!-- <node pkg="rosbag" type="record" name="rosbag_record"
       args="record /tf /panda_ik/drone_goal /panda_ik/drone_output /panda_ik/event /panda_ik/input /panda_ik/output /panda_ik/view_cost /panda_ik/panda_commanded_pose
       /panda_ik/planes /vrpn_client_node/drone/pose /rvizToggle /panda_ik/global_solutions /event /path /JointController/panda/joint_command -o /home/senft/src/jup/bags/bag.bag"/> -->


        <!-- <node pkg="drone_panda" type="pcl_plane_to_bounding" name="pcl_plane_to_bounding"/>
        <node pkg="drone_panda" type="cloudplane" name="cloudplane" output="screen"/> -->

    <group if="$(arg virtual_robot)">
	    <node pkg="panda_ik" type="panda_ik" name="panda_ik" output="screen">
            <!-- <param name="URDF" type="string" value="$(find drone_panda)/urdfs/panda.urdf" /> -->
            <param name="URDF" type="string" value="$(find drone_panda)/urdfs/lio.urdf" />
	    </node>
        <node pkg="drone_panda" type="pc_publish_shalutha" name="pc_publish"/>
        <include file="$(find drone_panda)/launch/joint_state_pub_shalutha.launch">  
            <arg name="only_virtual" value="true" />
        </include>
	</group>

    <group unless="$(arg virtual_robot)">
	    <node pkg="panda_ik" type="panda_ik" name="panda_ik" output="screen">
            <remap from="/panda_ik/output" to="/JointController/panda/joint_command"/>
		    <!-- <param name="URDF" type="string" value="$(find drone_panda)/urdfs/panda.urdf" /> -->
            <param name="URDF" type="string" value="$(find drone_panda)/urdfs/lio.urdf" />
	    </node>
        <node pkg="drone_panda" type="pc_publish_shalutha" name="pc_publish"/>
        <node pkg="drone_panda" type="torque_filter" name="torque_filter"/>
        <!-- <node pkg="drone_panda" type="pc_record" name="pc_record"/> -->
	</group>

    <param name="drone_description" textfile="$(find drone_panda)/urdfs/drone.urdf" />
    <param name="drone_alt_description" textfile="$(find drone_panda)/urdfs/dronealt.urdf" />

    <group if="$(arg use_joy)">
    	<include file="$(find teleop_twist_joy)/launch/teleop.launch">  
    	</include>
        <node pkg="drone_panda" type="joy_driver" name="joy_driver" output="screen">
        	<param name="virtual_robot" type="bool" value="$(arg virtual_robot)" />
	    </node>
    </group>

    <group if="$(arg use_space_mouse)">
    	<include file="$(find spacenav_node)/launch/classic.launch"/>
        <node pkg="drone_panda" type="spacemouse_driver" name="spacemouse_driver" output="screen">
        	<param name="virtual_robot" type="bool" value="$(arg virtual_robot)" />
	    </node>
    </group>

    <!-- <group if="$(arg virtual_drone)">
        <node pkg="drone_panda" type="virtual_drone_manager" name="virtual_camera_manager" output="screen"/> 
    </group> -->

    <!-- <group unless="$(arg virtual_drone)">
        <include file="$(find drone_panda)/launch/mocap.launch">  
        </include>

        <node pkg="drone_panda" type="static_publisher" name="mocap_camera_static_publisher">
            <param name="file_name" type="string" value="transforms.yaml" />
            <param name="transform" type="string" value="mocap" />
        </node>
    </group> -->

</launch>
