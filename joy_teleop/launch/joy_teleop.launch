<?xml version="1.0"?>
<launch>

    <arg name="virtual_robot" default="true"/>
    <arg name="output" default="/ik_interface/joint_states_sim"/>
    <arg name="physical_robot" default="false"/>


    <param name="physical_robot" type="bool" value="$(arg physical_robot)" />

    <node pkg="panda_ik" type="panda_ik" name="panda_ik" output="screen">
        <param name="URDF" type="string" value="$(find panda_ik)/urdfs/lio_arm_reframed.urdf" />
        <param name="weighted_pose" type="bool" value="false"/>
    </node>

    <node pkg="lio_specific_pkg" type="ik_interface.py" name="ik_interface" output="screen"/>

    <group if="$(arg physical_robot)">
        <node pkg="lio_specific_pkg" type="myp_manager.py" name="myp_manager" output="screen"/>
        <node pkg="lio_specific_pkg" type="myp_application.py" name="myp_application" output="screen"/>
    </group>

    <rosparam param="joy_node/dev">"/dev/input/js0"</rosparam>
    <include file="$(find teleop_twist_joy)/launch/teleop.launch">  
        <arg name="joy_dev" value="/dev/input/js0" />
    </include>
    <node pkg="joy_teleop" type="joy_driver.py" name="joy_driver" output="screen"/>
    <node pkg="joy_teleop" type="joy_controller.py" name="joy_controller" output="screen"/>


    <group if="$(arg virtual_robot)">
        <!-- Load URDF -->
        <param name="robot_description" textfile="$(find lio_description)/urdf/lio.urdf" />
        <!-- Launch RVIZ -->
        <node type="rviz" name="rviz" pkg="rviz" args="-d $(find joy_teleop)/rviz/teleop.rviz" />
        <arg name="node_start_delay" default="1.0" />  
        <!-- Launch robot state publisher -->
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="lio_state_publisher" launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' " output="screen">
            <remap from="joint_states" to="$(arg output)"/>
            <param name="publish_frequency" type="double" value="1000.0" />
        </node>
    </group>

</launch>
